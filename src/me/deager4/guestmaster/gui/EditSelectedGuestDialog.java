/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package me.deager4.guestmaster.gui;

import java.awt.Color;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.StringTokenizer;

import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;

import me.deager4.guestmaster.GuestMaster;
import me.deager4.guestmaster.database.FormattedDate;
import me.deager4.guestmaster.database.Sponsor;
import me.deager4.guestmaster.database.SponsorVisit;
import me.deager4.guestmaster.database.Visit;
import me.deager4.guestmaster.sounds.Sounds;

/**
 *
 * @author Stephen
 */
public class EditSelectedGuestDialog extends javax.swing.JDialog {

    /**
	 * 
	 */
	private static final long serialVersionUID = -5615908632988056454L;
	/**
     * Creates new form EditSelectedGuestDialog
     */
    public EditSelectedGuestDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Date date = new Date();
        DateFormat format = new SimpleDateFormat("MM/dd/yyyy");
        dateField.setText(format.format(date));
        this.guestNameLabel.setText(MainMenu.selectedGuest.getName());
        this.refreshList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        statusLabel = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        guestNameLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        visitList = new javax.swing.JList();
        addAVisitButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        StatusLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dateField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        sponsorNameField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        guestPassGuestPass = new javax.swing.JCheckBox();

        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statusLabel.setText("jLabel1");

        jTextField1.setText("jTextField1");

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        guestNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guestNameLabel.setText("jLabel1");

        jScrollPane1.setViewportView(visitList);

        addAVisitButton.setText("Add A Visit");
        addAVisitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					addAVisitButtonActionPerformed(evt);
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        jLabel1.setText("Status:");

        StatusLabel.setToolTipText("");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Add A Visit");

        jLabel4.setText("Date*:");

        jLabel5.setText("Sponsor Name:");

        jLabel6.setText("*Use format \"mm/dd/yy\"");

        guestPassGuestPass.setText("Guest Pass");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guestNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(addAVisitButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sponsorNameField))
                            .addComponent(guestPassGuestPass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(StatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(guestNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(StatusLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(sponsorNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(jLabel6)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addAVisitButton)
                    .addComponent(guestPassGuestPass))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshList()
    {
    	if(MainMenu.selectedGuest.getVisits().size() >= 5)
        {
        	StatusLabel.setText("OVER LIMIT!!!");
        	StatusLabel.setForeground(Color.red);
        	addAVisitButton.setEnabled(false);
        	dateField.setEditable(false);
        	sponsorNameField.setEditable(false);
        	GuestMaster.getDatabase().getGuest(MainMenu.selectedGuest).setOverLimit(true);
        }
        else
        {
        	StatusLabel.setText("CLEARED");
        	StatusLabel.setForeground(Color.green);
        	addAVisitButton.setEnabled(true);
        	dateField.setEditable(true);
        	sponsorNameField.setEditable(true);
        }
    	ArrayList<Visit> list = GuestMaster.getDatabase().getGuest(MainMenu.selectedGuest).getVisits();
        DefaultListModel<Visit> model = new DefaultListModel<Visit>();
        for(int count = 0; count < list.size(); count ++)
        {
        	model.addElement(list.get(count));
        }
        visitList = new JList<Visit>(model);
        visitList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(visitList);
    }
    
    private void addAVisitButtonActionPerformed(java.awt.event.ActionEvent evt) throws IOException {
    	Sounds.BUTTON_ON.play(1);
        if(this.dateField.getText().equals("") || this.sponsorNameField.getText().equals(""))
        {
        	JOptionPane.showMessageDialog(GuestMaster.getFrame(), "You need to fill in all fields!!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
        	StringTokenizer a = new StringTokenizer(dateField.getText(), "/");
        	int day = Integer.parseInt(a.nextToken());
        	int month = Integer.parseInt(a.nextToken());
        	int year = Integer.parseInt(a.nextToken());
        	FormattedDate date = new FormattedDate(month, day, year);
        	StringTokenizer b = new StringTokenizer(sponsorNameField.getText(), " ");
        	String firstName = b.nextToken();
        	String lastName = b.nextToken();
        	String name = firstName + " " + lastName;
        	Visit visit = new Visit(firstName, lastName, date);
        	StringTokenizer c = new StringTokenizer(MainMenu.selectedGuest.getName(), " ");
        	
        	SponsorVisit sponsorVisit = new SponsorVisit(c.nextToken(), c.nextToken(), date, guestPassGuestPass.isSelected());
        	if(GuestMaster.getDatabase().getSponsorList().containsKey(firstName + " " + lastName))
        	{
        		GuestMaster.getDatabase().getSponsorList().get(firstName + " " + lastName).addVisit(sponsorVisit);
        	}
        	else
        	{
        		Sponsor sponsor = new Sponsor(firstName + " " + lastName);
        		sponsor.addVisit(sponsorVisit);
        		GuestMaster.getDatabase().addSponsor(firstName + " " + lastName, sponsor);
        	}
        	
        	GuestMaster.getDatabase().getGuest(MainMenu.selectedGuest).addVisit(visit);
        	dateField.setText("");
        	sponsorNameField.setText("");
        	this.refreshList();
        	if(GuestMaster.getDatabase().getGuest(MainMenu.selectedGuest).getVisits().size() == 4)
        	{
        		JOptionPane.showMessageDialog(GuestMaster.getFrame(), "Warning!!! This guest only has one(1) visit left!!!", "Warning!!!", JOptionPane.WARNING_MESSAGE);
        	}
        	if(GuestMaster.getDatabase().getGuest(MainMenu.selectedGuest).getVisits().size() == 5)
        	{
        		String message = MainMenu.selectedGuest.getName()+ ", Birthdate:" + MainMenu.selectedGuest.getBirthDate().toString() + " has had 5 visits. Do your thing..." + '\n';
        		for(int count = 0; count < MainMenu.selectedGuest.getVisits().size(); count ++)
        		{
        			message = message +("Visit " + (count +1) + ": " + MainMenu.selectedGuest.getVisits().get(count).toString() + '\n');
        		}
        		GuestMaster.getMailer().sendMail(message, MainMenu.selectedGuest.getName() + ": Five Visit Warning!!!");
        	}
        	GuestMaster.getDatabase().exportDatabase();
        	GuestMaster.getMainMenu().updateDisplay();
        	Date date1 = new Date();
        	DateFormat format = new SimpleDateFormat("MM/dd/yyyy");
        	dateField.setText(format.format(date1));
        	guestPassGuestPass.setSelected(false);
        }
    }                                               

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditSelectedGuestDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditSelectedGuestDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditSelectedGuestDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditSelectedGuestDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditSelectedGuestDialog dialog = new EditSelectedGuestDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel StatusLabel;
    private javax.swing.JButton addAVisitButton;
    private javax.swing.JTextField dateField;
    private javax.swing.JLabel guestNameLabel;
    private javax.swing.JCheckBox guestPassGuestPass;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField sponsorNameField;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JList visitList;
    // End of variables declaration//GEN-END:variables
}
